"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
const sapphire = __importStar(require("@oasisprotocol/sapphire-paratime"));
const config_1 = require("hardhat/config");
(0, config_1.extendEnvironment)((hre) => {
    const { chainId } = hre.network.config;
    const rpcUrl = 'url' in hre.network.config ? hre.network.config.url : '';
    if (chainId) {
        if (!sapphire.NETWORKS[chainId])
            return;
    }
    else {
        if (!/sapphire/i.test(rpcUrl))
            return;
        console.warn('The Hardhat config for the network with `url`', rpcUrl, 'did not specify `chainId`.', 'The RPC URL looks like it may be Sapphire, so `@oasisprotocol/sapphire-hardhat` has been activated.', 'You can prevent this from happening by setting a non-Sapphire `chainId`.');
    }
    hre.network.provider = sapphire.wrap(hre.network.provider);
});
//# sourceMappingURL=index.js.map